#include "task.h"
#include <string.h>
#include <stdio.h>

extern DHT_HandleTypeDef DHT11;
extern LiquidCrystal_I2C hlcd;
extern DC_Motor_HandleTypeDef MOTOR_1;
extern UART_HandleTypeDef huart2;

static char buff[TX_DATA_SIZE];

/** read DHT11 */
void TASK_1(){
	DHT_ReadTempHum(&DHT11);
}

/** handle RX uart */
void TASK_2(char* Rx_data){
	uint16_t ret = Check_Request(Rx_data);
	if(!ret) {
		ret = Get_Arg(Rx_data);
	}
	if(!ret) {
		ret = Handle_Request();
	}

}

/** TX uart */
void TASK_3(){
//	sprintf(buff, "Speed %d\nDHT_status 0x%#03x\n", MOTOR_1.speed, DHT11.Error);
//	sprintf(buff, "Speed %d\nDHT_status %d\n", MOTOR_1.speed, DHT11.Error);
//	sprintf(buff, "DHT status %d\n", DHT11.Error);
//	sprintf(buff, "Speed %d\nDHT_status 0x%#03x\n", MOTOR_1.speed, DHT11.Error);

	if(DHT11.Error) {
		sprintf(buff, "Speed %d\nDHT_status 0x%#03x\n\n", MOTOR_1.speed, DHT11.Error);
	} else {
		sprintf(buff, "Speed %d\nDHT_status %d\nTemp %.2f\nHumi %.2f\n\n", MOTOR_1.speed, DHT11.Error, DHT11.Temp, DHT11.Humi);
	}
	HAL_UART_Transmit(&huart2,(uint8_t* )buff, strlen(buff), TX_UART_TIMEOUT );

//	sprintf(buff, "Speed %d\n", MOTOR_1.speed);
//	HAL_UART_Transmit(&huart2,(uint8_t* )buff, strlen(buff), TX_UART_TIMEOUT );

}

/** display LCD temperature & relative humidity of DHT11*/
void TASK_4(){


	if(DHT11.Error) {
//		lcd_clear_display(&hlcd);
		lcd_set_cursor(&hlcd, 0, 0);
		lcd_printf(&hlcd, "Temp : __.__ %cC ",(char)223);
		lcd_set_cursor(&hlcd, 1,0);
		lcd_printf(&hlcd, "Humi : __.__ %%");
	} else {
		lcd_set_cursor(&hlcd, 0, 0);
		lcd_printf(&hlcd, "Temp : %.2f %cC ", DHT11.Temp, (char)223);
		lcd_set_cursor(&hlcd, 1,0);
		lcd_printf(&hlcd, "Humi : %.2f %%", DHT11.Humi );

	}

}

/** Control speed motor*/
void TASK_5(){

}
